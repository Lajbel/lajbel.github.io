---
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

interface Props {
	tutorial: CollectionEntry<"tutorial">;
	title: string;
	image: string;
	date: string;
}

export async function getStaticPaths() {
	const allTutorials = await getCollection("tutorial");

	return allTutorials.map((tutorial: CollectionEntry<"tutorial">) => {
		return {
			params: {
				slug: tutorial.slug,
			},
			props: {
				tutorial,
				...tutorial.data,
			},
		};
	});
}

const { tutorial, ...props } = Astro.props;
const { Content } = await tutorial.render();
---

<Layout
	meta={{
		title: props.title,
		description: tutorial.body,
	}}
>
	<header class="flex relative center items-end w-full h-40 bg-base-300">
		<img
			class="brightness-50 object-cover object-center w-full h-full"
			src={props.image}
			alt="Post's banner"
		/>

		<div
			class="flex flex-col gap-2 absolute top-1/2 left-1/2 translate-x-[-50%] translate-y-[-50%] w-full h-full justify-end max-w-[80ch] py-4 text-white px-2"
		>
			<h1 class="text-2xl font-bold">{props.title}</h1>
			<ul class="flex gap-1 flex-wrap">
				{
					tutorial.data.tags.map((tag) => (
						<div class="badge badge-accent">{tag}</div>
					))
				}
			</ul>
			<p class="text-sm">
				{props.date.toString().slice(0, 10)}, Daniel BÃ¡ez
			</p>
		</div>
	</header>
	<main class="prose m-auto px-2 pb-2 max-w-[80ch]">
		<Content />
	</main>
</Layout>
