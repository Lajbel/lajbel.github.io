{"version":3,"sources":["/src/scripts/config.ts","/src/scripts/post.ts"],"sourcesContent":["export const config = {\r\n    lang: \"en\",\r\n    currentCard: \"\",\r\n    jsonContent: {} as Record<string, any>\r\n}","/// <reference lib=\"dom\" />\r\nimport { config } from \"./config.ts\";\r\n\r\nlet jsonContent: Record<string, any>;\r\n\r\n// Fetch content.json\r\nfetch(\"/content.json\").then((response) => response.json()).then(\r\n    (data) => {\r\n        jsonContent = data;\r\n        config.jsonContent = jsonContent;\r\n        const cards = document.querySelectorAll('.card') as NodeListOf<HTMLDivElement>;\r\n\r\n        // If URL has card id\r\n        const url = new URL(window.location.href);\r\n        const cardId = url.searchParams.get(\"card\");\r\n\r\n        if (cardId) {\r\n            cards.forEach((card) => {\r\n                if (card.id === cardId) {\r\n                    card.click();\r\n                }\r\n            });\r\n        }\r\n    }\r\n);\r\n\r\n// Functions    \r\nexport function updatePost(cardId: string) {\r\n    const dataContent = jsonContent[cardId];\r\n    if (!dataContent) return;\r\n\r\n    const dataLangContent = dataContent[config.lang];\r\n    const content = dataLangContent?.content?.toString() || dataContent.content?.toString() || \"\";\r\n    const title = dataLangContent?.title?.toString() || dataContent.title?.toString() || \"\";\r\n    const image = dataContent.image?.toString() || \"\";\r\n\r\n    updatePostContent(\r\n        content,\r\n        cardId,\r\n        title,\r\n        image,\r\n    )\r\n}\r\n\r\nexport function updatePostContent(content: string, id: string, title: string, image: string) {\r\n    const spacePostContent = document.querySelector('.space__post-content');\r\n    const spacePostTitle = document.querySelector<HTMLHeadingElement>('.space__post-title');\r\n    const spacePostImage = document.querySelector<HTMLImageElement>('.space__post-image');\r\n\r\n    if (spacePostContent && spacePostImage && spacePostTitle) {\r\n        spacePostContent.innerHTML = content;\r\n        spacePostContent.id = id;\r\n        spacePostTitle.innerHTML = title;\r\n        spacePostImage.src = image;\r\n    }\r\n}\r\n\r\n"],"mappings":"+EAAO,IAAMA,EAAS,CAClB,KAAM,KACN,YAAa,GACb,YAAa,CAAC,CAClB,ECDA,IAAIC,EAGJ,MAAM,eAAe,EAAE,KAAMC,GAAaA,EAAS,KAAK,CAAC,EAAE,KACtDC,GAAS,CACNF,EAAcE,EACdC,EAAO,YAAcH,EACrB,IAAMI,EAAQ,SAAS,iBAAiB,OAAO,EAIzCC,EADM,IAAI,IAAI,OAAO,SAAS,IAAI,EACrB,aAAa,IAAI,MAAM,EAEtCA,GACAD,EAAM,QAASE,GAAS,CAChBA,EAAK,KAAOD,GACZC,EAAK,MAAM,CAEnB,CAAC,CAET,CACJ,EAGO,SAASC,EAAWF,EAAgB,CACvC,IAAMG,EAAcR,EAAYK,CAAM,EACtC,GAAI,CAACG,EAAa,OAElB,IAAMC,EAAkBD,EAAYL,EAAO,IAAI,EACzCO,EAAUD,GAAiB,SAAS,SAAS,GAAKD,EAAY,SAAS,SAAS,GAAK,GACrFG,EAAQF,GAAiB,OAAO,SAAS,GAAKD,EAAY,OAAO,SAAS,GAAK,GAC/EI,EAAQJ,EAAY,OAAO,SAAS,GAAK,GAE/CK,EACIH,EACAL,EACAM,EACAC,CACJ,CACJ,CAfgBE,EAAAP,EAAA,cAiBT,SAASM,EAAkBH,EAAiBK,EAAYJ,EAAeC,EAAe,CACzF,IAAMI,EAAmB,SAAS,cAAc,sBAAsB,EAChEC,EAAiB,SAAS,cAAkC,oBAAoB,EAChFC,EAAiB,SAAS,cAAgC,oBAAoB,EAEhFF,GAAoBE,GAAkBD,IACtCD,EAAiB,UAAYN,EAC7BM,EAAiB,GAAKD,EACtBE,EAAe,UAAYN,EAC3BO,EAAe,IAAMN,EAE7B,CAXgBE,EAAAD,EAAA","names":["config","jsonContent","response","data","config","cards","cardId","card","updatePost","dataContent","dataLangContent","content","title","image","updatePostContent","__name","id","spacePostContent","spacePostTitle","spacePostImage"],"sourceRoot":"file:///C:/Users/danie/Documents/Projects/lajbel.github.io","file":"/scripts/post.js.map"}