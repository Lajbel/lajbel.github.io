{"version":3,"sources":["/src/scripts/config.ts","/src/scripts/post.ts","/src/scripts/language.ts","/src/scripts/card.ts","/src/scripts/cardFolder.ts","/src/scripts/navButton.ts"],"sourcesContent":["export const config = {\r\n    lang: \"en\",\r\n    currentCard: \"\",\r\n    jsonContent: {},\r\n}","/// <reference lib=\"dom\" />\r\nimport { config } from \"./config.ts\";\r\n\r\nlet jsonContent: Record<string, any>;\r\n\r\n// Fetch content.json\r\nfetch(\"/content.json\").then((response) => response.json()).then(\r\n    (data) => {\r\n        jsonContent = data;\r\n        config.jsonContent = jsonContent;\r\n    }\r\n);\r\n\r\n// Functions    \r\nexport function updatePostWCard(cardId: string) {\r\n    const dataContent = jsonContent[cardId];\r\n    if (!dataContent) return;\r\n\r\n    const dataLangContent = dataContent[config.lang];\r\n    const content = dataLangContent?.content?.toString() || dataContent.content?.toString() || \"\";\r\n    const title = dataLangContent?.title?.toString() || dataContent.title?.toString() || \"\";\r\n    const image = dataContent.image?.toString() || \"\";\r\n\r\n    updatePostContent(\r\n        content,\r\n        cardId,\r\n        title,\r\n        image,\r\n    )\r\n}\r\n\r\nexport function updatePostContent(content: string, id: string, title: string, image: string) {\r\n    const spacePostContent = document.querySelector('.space__post-content');\r\n    const spacePostTitle = document.querySelector<HTMLHeadingElement>('.space__post-title');\r\n    const spacePostImage = document.querySelector<HTMLImageElement>('.space__post-image');\r\n\r\n    if (spacePostContent && spacePostImage && spacePostTitle) {\r\n        spacePostContent.innerHTML = content;\r\n        spacePostContent.id = id;\r\n        spacePostTitle.innerHTML = title;\r\n        spacePostImage.src = image;\r\n    }\r\n}\r\n\r\n","/// <reference lib=\"dom\" />\r\nimport { config } from \"./config.ts\";\r\nimport { updatePostWCard } from \"./post.ts\";\r\n\r\nconst cardFolders = document.querySelectorAll('.card-folder');\r\nconst cards = document.querySelectorAll('.card');\r\nconst enButton = document.querySelector(\".space__en-btn\");\r\nconst esButton = document.querySelector(\".space__es-btn\");\r\nconst cardFolderNames = {\r\n    \"es\": {\r\n        \"home\": \"Inicio\",\r\n        \"projects\": \"Proyectos\",\r\n        \"games\": \"Videojuegos\",\r\n    },\r\n    \"en\": {\r\n        \"home\": \"Home\",\r\n        \"projects\": \"Code Projects\",\r\n        \"games\": \"Games\",\r\n    }\r\n}\r\n\r\nexport function swapLanguage(language: \"es\" | \"en\") {\r\n    config.lang = language;\r\n    const lang = language;\r\n\r\n    cardFolders.forEach((cardFolder) => {\r\n        const folderTitle = cardFolder?.querySelector(\".card-folder__title\");\r\n        if (folderTitle) {\r\n            folderTitle.innerHTML = cardFolderNames[lang][cardFolder.id as \"home\" | \"projects\" | \"games\"];\r\n        }\r\n    });\r\n\r\n    cards.forEach((card) => {\r\n        const cardName = card?.querySelector(\".card__name\");\r\n        const cardDescription = card?.querySelector(\".card__description\");\r\n\r\n        if (cardName && cardDescription) {\r\n            const dataContent = config.jsonContent[card.id];\r\n            const dataLangContent = dataContent[lang];\r\n            const title = dataLangContent?.title?.toString() || dataContent.title?.toString() || \"\";\r\n            const description = dataLangContent?.description?.toString() || dataContent.description?.toString() || \"\";\r\n\r\n            cardName.innerHTML = title;\r\n            cardDescription.innerHTML = description;\r\n        }\r\n    });\r\n\r\n    updatePostWCard(config.currentCard);\r\n\r\n}\r\n\r\nenButton?.addEventListener('click', () => {\r\n    swapLanguage(\"en\");\r\n});\r\n\r\nesButton?.addEventListener('click', () => {\r\n    swapLanguage(\"es\");\r\n});","/// <reference lib=\"dom\" />\r\nimport { config } from \"./config.ts\";\r\nimport { updatePostWCard } from \"./post.ts\";\r\n\r\nconst cards = document.querySelectorAll('.card');\r\nconst spacePost = document.querySelector('.space__post');\r\nconst exitBtn = document.querySelector('.space__exit-btn');\r\n\r\nlet activeCard: HTMLDivElement | null = null;\r\nlet activeCardFolder: HTMLDivElement | null = null;\r\n\r\nfunction handleCardClick(card: HTMLDivElement) {\r\n    card.classList.remove(\"card--active\");\r\n    card.classList.add(\"card--in-space\");\r\n    config.currentCard = card.id;\r\n\r\n    if (activeCard) {\r\n        activeCard.classList.remove(\"card--in-space\");\r\n        activeCard.classList.add(\"card--active\");\r\n    }\r\n\r\n    activeCard = card as HTMLDivElement;\r\n    activeCardFolder = card.parentElement?.parentElement as HTMLDivElement;\r\n\r\n    updatePostWCard(card.id);\r\n    spacePost?.classList.add(\"space__post--active\");\r\n}\r\n\r\ncards.forEach((card) => {\r\n    card.addEventListener('click', () => {\r\n        handleCardClick(card as HTMLDivElement);\r\n    });\r\n});\r\n\r\n// Exit and return card\r\nexitBtn?.addEventListener('click', () => {\r\n    activeCard?.classList.remove(\"card--in-space\");\r\n    spacePost?.classList.remove(\"space__post--active\");\r\n\r\n    if (spacePost) {\r\n        spacePost.id = \"\";\r\n    }\r\n\r\n    if (activeCardFolder?.classList.contains('card-folder--active')) {\r\n        activeCard?.classList.add(\"card--active\");\r\n    }\r\n\r\n    activeCard = null;\r\n});","/// <reference lib=\"dom\" />\r\n\r\nconst cardFolders = document.querySelectorAll('.card-folder');\r\n\r\nfunction changeFolderCardsState(cardFolder: HTMLDivElement, state?: boolean) {\r\n    const cardsContainer = cardFolder.querySelector(\".card-folder__cards-container\");\r\n    const cards = cardsContainer?.querySelectorAll(\".card\");\r\n\r\n    cards?.forEach((card) => {\r\n        if (card.classList.contains('card--in-space')) return;\r\n        card.classList.toggle('card--active', state);\r\n    });\r\n}\r\n\r\nfunction onCardFolderClick(cardFolder: HTMLDivElement) {\r\n    cardFolder.classList.toggle('card-folder--active');\r\n    changeFolderCardsState(cardFolder, cardFolder.classList.contains('card-folder--active'));\r\n}\r\n\r\ncardFolders.forEach((cardFolder) => {\r\n    changeFolderCardsState(cardFolder as HTMLDivElement, cardFolder.classList.contains('card-folder--active'));\r\n    const folderCover = cardFolder.querySelector(\".card-folder__cover\");\r\n\r\n    folderCover?.addEventListener('click', () => {\r\n        onCardFolderClick(cardFolder as HTMLDivElement);\r\n    });\r\n});","const nav = document.querySelector('.nav');\r\nconst navButton = document.querySelector('.nav__button');\r\n\r\nnavButton?.addEventListener('click', () => {\r\n    nav?.classList.toggle('nav--active');\r\n});"],"mappings":"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","names":["config","jsonContent","response","data","config","updatePostWCard","cardId","dataContent","dataLangContent","content","title","image","updatePostContent","__name","id","spacePostContent","spacePostTitle","spacePostImage","cardFolders","cards","enButton","esButton","cardFolderNames","swapLanguage","language","config","lang","cardFolder","folderTitle","card","cardName","cardDescription","dataContent","dataLangContent","title","description","updatePostWCard","__name","cards","spacePost","exitBtn","activeCard","activeCardFolder","handleCardClick","card","config","updatePostWCard","__name","cardFolders","changeFolderCardsState","cardFolder","state","card","__name","onCardFolderClick","nav","navButton"],"sourceRoot":"file:///C:/Users/danie/Documents/Projects/lajbel.github.io","file":"/scripts/main.js.map"}